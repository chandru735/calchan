{"name": "test_C248996468", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <CalculatorFrameWork.pages.CalculatorHomeScreenPage.CalculatorHome object at 0x0000021F223CE940>\nlocatorValue = 'com.miui.calculator:id/iv_tab_finance', locatorType = 'id'\n\n    def getElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.waitForElement(locatorValue, locatorType)\n\n..\\base\\BasePage.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CalculatorFrameWork.pages.CalculatorHomeScreenPage.CalculatorHome object at 0x0000021F223CE940>\nlocatorvalue = 'com.miui.calculator:id/iv_tab_finance', locatorType = 'id'\n\n    def waitForElement(self, locatorvalue, locatorType):\n        locatorType = locatorType.lower()\n        element = None\n        wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                             ignored_exceptions=[ElementNotVisibleException, ElementNotSelectableException,\n                                                 NoSuchElementException])\n        if locatorType == \"id\":\n>           element = wait.until(lambda x: x.find_element_by_id(locatorvalue))\n\n..\\base\\BasePage.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2c8c152c-2622-4c1c-a2fc-37ef7ab8e073\")>\nmethod = <function BasePage.waitForElement.<locals>.<lambda> at 0x0000021F2272BDC0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <CalculatorFrameWork.pages.CalculatorHomeScreenPage.CalculatorHome object at 0x0000021F223CE940>\nlocatorValue = 'com.miui.calculator:id/iv_tab_finance', locatorType = 'id'\n\n    def clickElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.getElement(locatorValue, locatorType)\n\n..\\base\\BasePage.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CalculatorFrameWork.pages.CalculatorHomeScreenPage.CalculatorHome object at 0x0000021F223CE940>\nlocatorValue = 'com.miui.calculator:id/iv_tab_finance', locatorType = 'id'\n\n    def getElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.waitForElement(locatorValue, locatorType)\n            self.log.info(\"Element found with LocatorType: \" + locatorType + \" with the locatorValue :\" + locatorValue)\n        except:\n            self.log.info(\n                \"Element not found with LocatorType: \" + locatorType + \" and with the locatorValue :\" + locatorValue)\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\BasePage.py:57: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <CalculatorFrameWork.tests.CalculatorHomeScreen.CalculatorMainHomeScreen testMethod=test_C248996468>\n\n    @pytest.mark.run(order=1)\n    def test_C248996468(self):\n        cl.allureLogs('App Launched')\n        self.cf.verifyagreedisplayed()\n        self.cf.verifydisagreedisplayed()\n        self.cf.clickprivacypolicyagree()\n        self.cf.clickbtn2()\n        self.cf.clickbtn1()\n        self.cf.clickbtn0()\n        self.cf.clickbtn8()\n        self.cf.clickaddition()\n        self.cf.clickbtn9()\n        self.cf.clickbtn7()\n        self.cf.clickminus()\n        self.cf.clickbtn4()\n        self.cf.clickmultiply()\n        self.cf.clickbtn3()\n        self.cf.clickdivision()\n        self.cf.clickbtn5()\n        self.cf.clickequal()\n        self.cf.clickdefaultbuttonswtich()\n        self.cf.clickdelete()\n        self.cf.clicksine()\n        self.cf.clicksettings()\n        self.cf.useSingleTap()\n>       self.cf.clickfinance()\n\nCalculatorHomeScreen.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\pages\\CalculatorHomeScreenPage.py:178: in clickfinance\n    self.clickElement(self._finance,'id')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CalculatorFrameWork.pages.CalculatorHomeScreenPage.CalculatorHome object at 0x0000021F223CE940>\nlocatorValue = 'com.miui.calculator:id/iv_tab_finance', locatorType = 'id'\n\n    def clickElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.getElement(locatorValue, locatorType)\n            element.click()\n            self.log.info(\n                \"Clicked on Element with LocatorType: \" + locatorType + \" and with the locatorValue :\" + locatorValue)\n        except:\n            self.log.info(\n                \"Unable to click on Element with LocatorType: \" + locatorType + \" and with the locatorValue :\" + locatorValue)\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\BasePage.py:72: AssertionError"}, "steps": [{"name": "App Launched", "status": "passed", "start": 1629468143349, "stop": 1629468143349}, {"name": "verified agree", "status": "passed", "start": 1629468144038, "stop": 1629468144038}, {"name": "clicked on button 2", "status": "passed", "start": 1629468155235, "stop": 1629468155235}, {"name": "clicked on button 1", "status": "passed", "start": 1629468156536, "stop": 1629468156536}, {"name": "clicked on button 0", "status": "passed", "start": 1629468157304, "stop": 1629468157304}, {"name": "clicked on button 8", "status": "passed", "start": 1629468157428, "stop": 1629468157428}, {"name": "clicked on addition", "status": "passed", "start": 1629468158739, "stop": 1629468158739}, {"name": "clicked on button 9", "status": "passed", "start": 1629468158913, "stop": 1629468158913}, {"name": "clicked on button 7", "status": "passed", "start": 1629468159596, "stop": 1629468159596}, {"name": "clicked on minus", "status": "passed", "start": 1629468160305, "stop": 1629468160305}, {"name": "clicked on button 4", "status": "passed", "start": 1629468161021, "stop": 1629468161021}, {"name": "clicked on multiply", "status": "passed", "start": 1629468161704, "stop": 1629468161704}, {"name": "clicked on button 3", "status": "passed", "start": 1629468162411, "stop": 1629468162411}, {"name": "clicked on division", "status": "passed", "start": 1629468163128, "stop": 1629468163128}, {"name": "clicked on button 5", "status": "passed", "start": 1629468163819, "stop": 1629468163819}, {"name": "clicked on equal button", "status": "passed", "start": 1629468165278, "stop": 1629468165278}, {"name": "clicked on default button switch", "status": "passed", "start": 1629468166982, "stop": 1629468166982}, {"name": "clicked on delete", "status": "passed", "start": 1629468167641, "stop": 1629468167641}, {"name": "clicked on sine button", "status": "passed", "start": 1629468167768, "stop": 1629468167768}, {"name": "clicked on settings button", "status": "passed", "start": 1629468168464, "stop": 1629468168464}, {"name": "Single tapped on the coordinates", "status": "passed", "start": 1629468168997, "stop": 1629468168997}], "attachments": [{"name": "id", "source": "60a9d0a9-1bdf-4215-83be-2da1fedd2ab9-attachment.png", "type": "image/png"}, {"name": "id", "source": "f520437e-c0c1-4891-8bbe-e84697a06ea1-attachment.png", "type": "image/png"}, {"name": "log", "source": "c44c4619-58c9-4a06-88a9-4f9b8c30450d-attachment.txt", "type": "text/plain"}], "start": 1629468143349, "stop": 1629468195351, "uuid": "cb167907-e5bc-4257-b907-1b69eea7b7c2", "historyId": "7029f5344ab598ba7c12aa1b511d732e", "testCaseId": "4d25963c8b8f4bec7164c44dc0f8e6dc", "fullName": "CalculatorHomeScreen.CalculatorMainHomeScreen#test_C248996468", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "tag", "value": "run(order=1)"}, {"name": "suite", "value": "CalculatorHomeScreen"}, {"name": "subSuite", "value": "CalculatorMainHomeScreen"}, {"name": "host", "value": "LOXTIPL00005549"}, {"name": "thread", "value": "11672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "CalculatorHomeScreen"}]}